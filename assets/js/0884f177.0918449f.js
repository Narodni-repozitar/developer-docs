"use strict";(self.webpackChunknrp_tech_docs=self.webpackChunknrp_tech_docs||[]).push([[677],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,k=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(k,i(i({ref:t},c),{},{components:n})):r.createElement(k,i({ref:t},c))}));function k(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3963:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:1},i="Required ecosystem services",l={unversionedId:"technology/invenio/ecosystem",id:"technology/invenio/ecosystem",title:"Required ecosystem services",description:"Overall architecture",source:"@site/docs/technology/invenio/ecosystem.md",sourceDirName:"technology/invenio",slug:"/technology/invenio/ecosystem",permalink:"/developer-docs/docs/technology/invenio/ecosystem",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/technology/invenio/ecosystem.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Invenio",permalink:"/developer-docs/docs/technology/invenio/"},next:{title:"Invenio repository architecture",permalink:"/developer-docs/docs/technology/invenio/architecture"}},s={},p=[{value:"Development",id:"development",level:2},{value:"Required Ports",id:"required-ports",level:2},{value:"Deployment",id:"deployment",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...a}=e;return(0,o.kt)(u,(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"required-ecosystem-services"},"Required ecosystem services"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Overall architecture",src:n(1566).Z,width:"1920",height:"1080"})),(0,o.kt)("p",null,"The following services are required for running the repository. In real deployment, these services\nmight be run containerized (inside docker or k8s infrastructure) or on bare metal."),(0,o.kt)("p",null,"Invenio provides sample ",(0,o.kt)("strong",{parentName:"p"},"docker-compose files")," to be used while developing the repository."),(0,o.kt)("p",null,"If you plan to run these services in k8s (either your own cluster or CESNET), please ask CESNET for\na sample configuration."),(0,o.kt)("h2",{id:"development"},"Development"),(0,o.kt)("p",null,"The development requires Linux or MacOS. ",(0,o.kt)("strong",{parentName:"p"},"Invenio does not run on Windows.")),(0,o.kt)("p",null,"The following components are required in development (all of those are initialized\nduring bootstrap process as docker-compose services):"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Redis 7 - cache, user sessions"),(0,o.kt)("li",{parentName:"ul"},"Postgresql 12+ - database backend"),(0,o.kt)("li",{parentName:"ul"},"RabbitMQ - for background tasks"),(0,o.kt)("li",{parentName:"ul"},"OpenSearch 2.0+ - for indexing metadata")),(0,o.kt)("p",null,"Recommended components:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"PGAdmin"),(0,o.kt)("li",{parentName:"ul"},"Opensearch Dashboards"),(0,o.kt)("li",{parentName:"ul"},"Minio - S3 compatible simple storage")),(0,o.kt)("p",null,"Additionally to these docker services, you will need the following packages\ninstalled directly on your system:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Python (currently version 3.9 is supported)"),(0,o.kt)("li",{parentName:"ul"},"Pipenv"),(0,o.kt)("li",{parentName:"ul"},"Docker and Docker compose"),(0,o.kt)("li",{parentName:"ul"},"Node (currently version 14 is supported)"),(0,o.kt)("li",{parentName:"ul"},"NPM (currently version 6 is supported)"),(0,o.kt)("li",{parentName:"ul"},"Imagemagick"),(0,o.kt)("li",{parentName:"ul"},"Git")),(0,o.kt)("p",null,"Versions that work:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Python version OK. Got 3.9.16.\nChecking Pipenv is installed...\nPipenv OK. Got version 2022.9.24.\nChecking Docker version...\nDocker version OK. Got 20.10.21.\nChecking Docker Compose version...\nDocker Compose version OK. Got 2.13.0.\nChecking Node version...\nNode version OK. Got 14.19.3.\nChecking NPM version...\nNPM version OK. Got 6.14.17.\nChecking ImageMagick version...\nImageMagick version OK. Got 7.1.0.\nChecking git version...\ngit version OK. Got 2.37.1.\n")),(0,o.kt)("h2",{id:"required-ports"},"Required Ports"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Security warning"),": Invenio in development mode opens all ports on 0.0.0.0, bypassing iptables.\nThis has been reported as a security bug. If you store any sensitive data during the development,\nchange the interface to 127.0.0.1 inside the generated docker-compose.yml"),(0,o.kt)("p",null,"The following ports must be available on the system (mostly these are default application ports + 200\nso that they do not conflict with versions installed on your system):"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Container"),(0,o.kt)("th",{parentName:"tr",align:null},"Ports"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"opensearchproject/opensearch:2.3.0"),(0,o.kt)("td",{parentName:"tr",align:null},"9400 (HTTP), 9800 (cluster)")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"redis:7"),(0,o.kt)("td",{parentName:"tr",align:null},"6579")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"rabbitmq:3-management"),(0,o.kt)("td",{parentName:"tr",align:null},"15872 (HTTP), 5872 (mq)")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"opensearchproject/opensearch-dashboards:2.3.0"),(0,o.kt)("td",{parentName:"tr",align:null},"5801")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"dpage/pgadmin4:5.2"),(0,o.kt)("td",{parentName:"tr",align:null},"5251 (HTTPS), 5250 (HTTP)")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"postgres:12.4"),(0,o.kt)("td",{parentName:"tr",align:null},"5632")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"minio/minio:latest"),(0,o.kt)("td",{parentName:"tr",align:null},"9000, 9001")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"invenio"),(0,o.kt)("td",{parentName:"tr",align:null},"5000 (HTTPS)")))),(0,o.kt)("h2",{id:"deployment"},"Deployment"),(0,o.kt)("p",null,"For deployment all the above services plus:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Postgresql - in cluster configuration"),(0,o.kt)("li",{parentName:"ul"},"OpenSearch - in cluster configuration"),(0,o.kt)("li",{parentName:"ul"},"NGINX / k8s ingress as a frontend web server")))}d.isMDXComponent=!0},1566:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/architecture-overall-f5136c35154050619137e689ec54cde7.png"}}]);