"use strict";(self.webpackChunknrp_tech_docs=self.webpackChunknrp_tech_docs||[]).push([[112],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(f,l(l({ref:t},p),{},{components:n})):r.createElement(f,l({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:o,l[1]=i;for(var c=2;c<a;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5542:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={},l="Tests",i={unversionedId:"technology/invenio/nrp-toolchain/plugins/tests",id:"technology/invenio/nrp-toolchain/plugins/tests",title:"Tests",description:"Plugin for oarepo-model-builder to generate",source:"@site/docs/technology/invenio/nrp-toolchain/plugins/tests.md",sourceDirName:"technology/invenio/nrp-toolchain/plugins",slug:"/technology/invenio/nrp-toolchain/plugins/tests",permalink:"/developer-docs/docs/technology/invenio/nrp-toolchain/plugins/tests",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/technology/invenio/nrp-toolchain/plugins/tests.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Requests",permalink:"/developer-docs/docs/technology/invenio/nrp-toolchain/plugins/requests"},next:{title:"Vocabularies",permalink:"/developer-docs/docs/technology/invenio/nrp-toolchain/plugins/vocabularies"}},s={},c=[{value:"Installation",id:"installation",level:2},{value:"model.yaml",id:"modelyaml",level:3},{value:"command line",id:"command-line",level:3}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"tests"},"Tests"),(0,o.kt)("p",null,"Plugin for oarepo-model-builder to generate\ntest files and add test dependencies."),(0,o.kt)("p",null,"The record service and its rest api are covered for now. Tests read, write,\nupdate, delete and search operations."),(0,o.kt)("p",null,"The tests use automatically generated metadata in {model_name}/data/sample_data.yaml file to create records and upload them as fixtures. If you modify sample_data.yaml, make sure it contains at least two records with different metadata."),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("h3",{id:"modelyaml"},"model.yaml"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"model:\n plugins:\n  packages:\n   - oarepo-model-builder-tests\n")),(0,o.kt)("h3",{id:"command-line"},"command line"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pip install oarepo-model-builder\npip install oarepo-model-builder-tests\n")))}d.isMDXComponent=!0}}]);