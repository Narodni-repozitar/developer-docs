"use strict";(self.webpackChunknrp_tech_docs=self.webpackChunknrp_tech_docs||[]).push([[93],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>h});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(t),m=r,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return t?a.createElement(h,i(i({ref:n},p),{},{components:t})):a.createElement(h,i({ref:n},p))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4943:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=t(7462),r=(t(7294),t(3905));const o={},i="oarepo-vocabularies",l={unversionedId:"technology/invenio/nrp-toolchain/libraries/vocabularies",id:"technology/invenio/nrp-toolchain/libraries/vocabularies",title:"oarepo-vocabularies",description:"This library provides support for:",source:"@site/docs/technology/invenio/nrp-toolchain/libraries/vocabularies.md",sourceDirName:"technology/invenio/nrp-toolchain/libraries",slug:"/technology/invenio/nrp-toolchain/libraries/vocabularies",permalink:"/developer-docs/docs/technology/invenio/nrp-toolchain/libraries/vocabularies",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/technology/invenio/nrp-toolchain/libraries/vocabularies.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"oarepo-runtime",permalink:"/developer-docs/docs/technology/invenio/nrp-toolchain/libraries/oarepo_runtime"},next:{title:"Plugins",permalink:"/developer-docs/docs/technology/invenio/nrp-toolchain/plugins/"}},s={},c=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Adding extra metadata",id:"adding-extra-metadata",level:2},{value:"Using hierarchies in vocabulary items",id:"using-hierarchies-in-vocabulary-items",level:2},{value:"Adding vocabulary items",id:"adding-vocabulary-items",level:3},{value:"Getting vocabulary items",id:"getting-vocabulary-items",level:3}],p={toc:c};function u(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"oarepo-vocabularies"},"oarepo-vocabularies"),(0,r.kt)("p",null,"This library provides support for:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"defining extra metadata on invenio vocabularies (for example, in case the standard key->string mapping in props is not enough)"),(0,r.kt)("li",{parentName:"ul"},"adding hierarchy to your vocabulary items")),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"To install the library, add ",(0,r.kt)("inlineCode",{parentName:"p"},"oarepo-vocabularies")," to your dependencies (pipfile, requirements.txt, setup.cfg)"),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"This library replaces Invenio service and resource config with a custom-fields enhanced one. To use it, please add the following\nlines to your ",(0,r.kt)("inlineCode",{parentName:"p"},"invenio.cfg"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# invenio.cfg\n\n\nfrom oarepo_vocabularies.services.config import VocabulariesConfig\nfrom oarepo_vocabularies.resources.config import VocabulariesResourceConfig\n\nVOCABULARIES_SERVICE_CONFIG = VocabulariesConfig\nVOCABULARIES_RESOURCE_CONFIG = VocabulariesResourceConfig\n")),(0,r.kt)("p",null,"Because the enhanced vocabularies use custom fields, before storing vocabulary items you will have to\nadd those fields to your opensearch server. To do so, invoke on the command line:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"invenio oarepo cf init\n")),(0,r.kt)("p",null,"If you forget to do so, you will get errors on indexing some of the vocabulary items."),(0,r.kt)("p",null,"Apart from these, just use the current_service/current_resource from ",(0,r.kt)("inlineCode",{parentName:"p"},"invenio_vocabularies.proxies")," with enhanced content. If you ever need to bypass the serivice and use the database(record) level, please use ",(0,r.kt)("inlineCode",{parentName:"p"},"oarepo_vocabularies.records.api.Vocabulary"),"."),(0,r.kt)("h2",{id:"adding-extra-metadata"},"Adding extra metadata"),(0,r.kt)("p",null,"To be able to add extra metadata, specify their custom fields in ",(0,r.kt)("inlineCode",{parentName:"p"},"invenio.cfg")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# invenio.cfg\n\nfrom invenio_records_resources.services.custom_fields.text import KeywordCF\nfrom tests.customfields import NonPreferredLabelsCF\n\n\nOAREPO_VOCABULARIES_CUSTOM_CF = [\n    KeywordCF("blah"),\n    NonPreferredLabelsCF("nonpreferredLabels"),\n]\n')),(0,r.kt)("p",null,"where ",(0,r.kt)("inlineCode",{parentName:"p"},"tests/customfields.py")," is an example of a custom complex field:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from invenio_records_resources.services.custom_fields import BaseCF\nimport marshmallow as ma\nfrom invenio_vocabularies.services.schema import i18n_strings\n\nclass NonPreferredLabelsCF(BaseCF):\n    @property\n    def mapping(self):\n        """Return the mapping."""\n        return {"type": "object", "dynamic": True}\n\n    @property\n    def field(self):\n        """Marshmallow field for custom fields."""\n        return ma.fields.List(i18n_strings)\n')),(0,r.kt)("p",null,"Have a look at ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/inveniosoftware/invenio-records-resources/tree/master/invenio_records_resources/services/custom_fields"},"invenio sources")," for a list of pre-defined custom field types."),(0,r.kt)("h2",{id:"using-hierarchies-in-vocabulary-items"},"Using hierarchies in vocabulary items"),(0,r.kt)("p",null,"Each vocabulary item might point to its parent item (within the same vocabulary type)."),(0,r.kt)("h3",{id:"adding-vocabulary-items"},"Adding vocabulary items"),(0,r.kt)("p",null,"To add vocabulary items programmatically, please specify ",(0,r.kt)("inlineCode",{parentName:"p"},"hierarchy.parent")," field pointing to item's parent:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json5"},'# parent item\n{\n    "id": "eng",\n    "title": {"en": "English", "da": "Engelsk"},\n    "type": "languages",\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json5"},'# child item\n{\n    "id": "eng.US",\n    "title": {"en": "English (US)", "da": "Engelsk (US)"},\n    "type": "languages",\n    "hierarchy": {"parent": "eng"},\n}\n')),(0,r.kt)("p",null,"This way you can construct hierarchies with unlimited depth."),(0,r.kt)("h3",{id:"getting-vocabulary-items"},"Getting vocabulary items"),(0,r.kt)("p",null,"When you get a vocabulary item, you'll have a couple more properties:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json5"},'{\n    "links": {\n        "self": "https://127.0.0.1:5000/api/vocabularies/languages/eng.US",\n        "parent": "https://127.0.0.1:5000/api/vocabularies/languages/eng",\n        "children": "https://127.0.0.1:5000/api/vocabularies/languages?h-parent=eng.US","descendants": "https://127.0.0.1:5000/api/vocabularies/languages?h-ancestor=eng.US"\n    },\n    "id": "eng.US",\n    "title": {"en": "English (US)", "da": "Engelsk (US)"},\n    "type": "languages",\n    "hierarchy": {\n        "level": 2,\n        "parent": "eng",\n        "title": [\n            {"da": "Engelsk (US)", "en": "English (US)"},\n            {"da": "Engelsk", "en": "English"},\n        ],\n        "ancestors": ["eng"]\n    }\n}\n')),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"links")," section is enhanced to help you with navigation to parent, children and descendants. The ",(0,r.kt)("inlineCode",{parentName:"p"},"hierarchy")," section has been automatically enhanced with data from the ancestors:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"level")," is the actual level inside the taxonomy tree. Tree roots have level=1"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"parent")," is the parent you have specified"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ancestors")," contains a list of identifiers of all the ancestors. Parent is the first item in the list, root is the last item"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"title")," contains titles of all the ancestors (this is useful in the UI so that you do not have to perform extra requests)")),(0,r.kt)("p",null,'The "hierarchy" section is defined via custom fields, see ',(0,r.kt)("a",{parentName:"p",href:"https://github.com/oarepo/oarepo-vocabularies/blob/main/oarepo_vocabularies/services/custom_fields/hierarchy.py"},"the code"),"."),(0,r.kt)("p",null,"In your use case you might want to add more information from the ancestors (such as icons, some properties, ...). To do so, define your own custom field and put it to your ",(0,r.kt)("inlineCode",{parentName:"p"},"invenio.cfg")," - but make sure to copy ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/oarepo/oarepo-vocabularies/blob/main/oarepo_vocabularies/config.py"},"all the standard system fields"),"."))}u.isMDXComponent=!0}}]);