"use strict";(self.webpackChunknrp_tech_docs=self.webpackChunknrp_tech_docs||[]).push([[878],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var a=o.createContext({}),u=function(e){var t=o.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},l=function(e){var t=u(e.components);return o.createElement(a.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,a=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(r),m=n,f=p["".concat(a,".").concat(m)]||p[m]||d[m]||i;return r?o.createElement(f,s(s({ref:t},l),{},{components:r})):o.createElement(f,s({ref:t},l))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,s=new Array(i);s[0]=m;var c={};for(var a in t)hasOwnProperty.call(t,a)&&(c[a]=t[a]);c.originalType=e,c[p]="string"==typeof e?e:n,s[1]=c;for(var u=2;u<i;u++)s[u]=r[u];return o.createElement.apply(null,s)}return o.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1549:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var o=r(7462),n=(r(7294),r(3905));const i={sidebar_label:"Routes",sidebar_position:2},s="Customizing routes",c={unversionedId:"technology/invenio/customize-ui/forms/routes",id:"technology/invenio/customize-ui/forms/routes",title:"Customizing routes",description:"When the standard edit & create routes doesn't fit the needs of your record models, it",source:"@site/docs/technology/invenio/customize-ui/forms/routes.md",sourceDirName:"technology/invenio/customize-ui/forms",slug:"/technology/invenio/customize-ui/forms/routes",permalink:"/developer-docs/docs/technology/invenio/customize-ui/forms/routes",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/technology/invenio/customize-ui/forms/routes.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"Routes",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/developer-docs/docs/technology/invenio/customize-ui/forms/overview"},next:{title:"Form config",permalink:"/developer-docs/docs/technology/invenio/customize-ui/forms/form-config"}},a={},u=[{value:"UI Resource config",id:"ui-resource-config",level:2}],l={toc:u},p="wrapper";function d(e){let{components:t,...r}=e;return(0,n.kt)(p,(0,o.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"customizing-routes"},"Customizing routes"),(0,n.kt)("p",null,"When the standard ",(0,n.kt)("inlineCode",{parentName:"p"},"edit")," & ",(0,n.kt)("inlineCode",{parentName:"p"},"create")," routes doesn't fit the needs of your record models, it\nis possible to customize route patterns as described here."),(0,n.kt)("p",null,"Customizing this is especially useful, if you want to share a single form\ntemplate (and React application) across multiple types of records. In that case,\nyour record routes would need to look more like ",(0,n.kt)("inlineCode",{parentName:"p"},"/records/<record_type>/<pid_value>/edit")," rather than just ",(0,n.kt)("inlineCode",{parentName:"p"},"/records/<pid_value>/edit"),"."),(0,n.kt)("h2",{id:"ui-resource-config"},"UI Resource config"),(0,n.kt)("p",null,"Update ",(0,n.kt)("inlineCode",{parentName:"p"},"routes")," in your UI ResourceConfig class to match the desired route pattern, e.g.:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'class MyUIResourceConfig(RecordsUIResourceConfig):\n    url_prefix = \'/myrecords/\'\n    routes = {\n        "create": "/<record_type>/custom/_new",\n        "edit": "/<record_type>/custom/<pid_value>/edit",\n    }\n')),(0,n.kt)("p",null,"Here we introduced a new URL parameter ",(0,n.kt)("inlineCode",{parentName:"p"},"record_type")," to the route pattern. If similar API routes (",(0,n.kt)("inlineCode",{parentName:"p"},"/api/myrecords/<record_type>..."),") is\nused for ",(0,n.kt)("inlineCode",{parentName:"p"},"myrecords")," model, we need to make some further adjustments using form config service components (see ",(0,n.kt)("a",{parentName:"p",href:"./form-config"},"Customizing form config"),")."))}d.isMDXComponent=!0}}]);