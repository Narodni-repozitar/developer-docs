"use strict";(self.webpackChunknrp_tech_docs=self.webpackChunknrp_tech_docs||[]).push([[283],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>m});var a=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var p=a.createContext({}),d=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},s=function(e){var n=d(e.components);return a.createElement(p.Provider,{value:n},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},g=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,i=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=d(t),g=l,m=u["".concat(p,".").concat(g)]||u[g]||c[g]||i;return t?a.createElement(m,r(r({ref:n},s),{},{components:t})):a.createElement(m,r({ref:n},s))}));function m(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var i=t.length,r=new Array(i);r[0]=g;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o[u]="string"==typeof e?e:l,r[1]=o;for(var d=2;d<i;d++)r[d]=t[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},2686:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var a=t(7462),l=(t(7294),t(3905));const i={},r="I18N values",o={unversionedId:"technology/invenio/nrp-toolchain/plugins/i18n",id:"technology/invenio/nrp-toolchain/plugins/i18n",title:"I18N values",description:"This plugin adds support for multilingual values. Within this plugin, two data types are added: multilingual and i18nstr. They can be added to the data model",source:"@site/docs/technology/invenio/nrp-toolchain/plugins/i18n.md",sourceDirName:"technology/invenio/nrp-toolchain/plugins",slug:"/technology/invenio/nrp-toolchain/plugins/i18n",permalink:"/developer-docs/docs/technology/invenio/nrp-toolchain/plugins/i18n",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/technology/invenio/nrp-toolchain/plugins/i18n.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Files",permalink:"/developer-docs/docs/technology/invenio/nrp-toolchain/plugins/files"},next:{title:"Relations",permalink:"/developer-docs/docs/technology/invenio/nrp-toolchain/plugins/relations"}},p={},d=[{value:"i18nStr",id:"i18nstr",level:2},{value:"Example",id:"example",level:3},{value:"Model",id:"model",level:4},{value:"Generated JsonSchema",id:"generated-jsonschema",level:4},{value:"Multilingual",id:"multilingual",level:2},{value:"Example",id:"example-1",level:3},{value:"Model",id:"model-1",level:4},{value:"Generated Schema",id:"generated-schema",level:4},{value:"Usage of i18nStr within another object",id:"usage-of-i18nstr-within-another-object",level:3},{value:"Example",id:"example-2",level:4},{value:"Supported languages:",id:"supported-languages",level:3},{value:"Example",id:"example-3",level:4},{value:"Model",id:"model-2",level:5},{value:"Generated Schema",id:"generated-schema-1",level:5},{value:"The change of the name of a language or value field",id:"the-change-of-the-name-of-a-language-or-value-field",level:3},{value:"Example:",id:"example-4",level:4},{value:"Model",id:"model-3",level:5},{value:"Generated Schema",id:"generated-schema-2",level:5},{value:"Indexing another data type using supported languages",id:"indexing-another-data-type-using-supported-languages",level:3},{value:"Example:",id:"example-5",level:4},{value:"Model:",id:"model-4",level:5},{value:"Schema:",id:"schema",level:5}],s={toc:d};function u(e){let{components:n,...t}=e;return(0,l.kt)("wrapper",(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"i18n-values"},"I18N values"),(0,l.kt)("p",null,"This plugin adds support for multilingual values. Within this plugin, two data types are added: multilingual and i18nstr. They can be added to the data model\nusing ",(0,l.kt)("inlineCode",{parentName:"p"},"type: multilingual")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"type: i18nstr"),".\nValues containing language tags must be in IETF ",(0,l.kt)("a",{parentName:"p",href:"https://www.w3.org/International/articles/language-tags/"},"format"),".\nThe structure of both data types can be changed using the ",(0,l.kt)("inlineCode",{parentName:"p"},"multilingual")," field."),(0,l.kt)("h2",{id:"i18nstr"},"i18nStr"),(0,l.kt)("p",null,"An object that contains the language of the item and the actual value of the item."),(0,l.kt)("h3",{id:"example"},"Example"),(0,l.kt)("h4",{id:"model"},"Model"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'"abstract": {"type": "i18nStr"}\n')),(0,l.kt)("h4",{id:"generated-jsonschema"},"Generated JsonSchema"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},' "abstract": {\n    "type": "object",\n    "properties": {\n        "lang": {\n        "type": "string"\n        },\n        "value": {\n        "type": "string"\n        }\n    }\n  }\n')),(0,l.kt)("h2",{id:"multilingual"},"Multilingual"),(0,l.kt)("p",null,"Array of i18nStr objects."),(0,l.kt)("h3",{id:"example-1"},"Example"),(0,l.kt)("h4",{id:"model-1"},"Model"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'"abstract": {"type": "multilingual"}\n')),(0,l.kt)("h4",{id:"generated-schema"},"Generated Schema"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},' "abstract": {\n    "type": "array",\n    "items": {\n        "type": "object",\n        "properties": {\n            "lang": {\n            "type": "string"\n            },\n            "value": {\n            "type": "string"\n            }\n        }\n    }\n}\n')),(0,l.kt)("h3",{id:"usage-of-i18nstr-within-another-object"},"Usage of i18nStr within another object"),(0,l.kt)("p",null,"i18nstr can be added to another object using ",(0,l.kt)("inlineCode",{parentName:"p"},'"use": "i18n"'),"."),(0,l.kt)("h4",{id:"example-2"},"Example"),(0,l.kt)("h3",{id:"supported-languages"},"Supported languages:"),(0,l.kt)("p",null,"Supported languages are defined in the object in the structure: ",(0,l.kt)("inlineCode",{parentName:"p"},'"supported language tag": {object containing additional\ninformation}')," within the field ",(0,l.kt)("inlineCode",{parentName:"p"},"supported-langs")," in model settings.\nSupported languages definition is used to specify the languages to be indexed in elasticsearch and opensearch,\nrespectively. All supplied data for the supported language will be inserted into the mapping definition."),(0,l.kt)("h4",{id:"example-3"},"Example"),(0,l.kt)("h5",{id:"model-2"},"Model"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'"model": {"properties": {"a": {"type": "multilingual"}}\n          "settings": {"supported-langs": {\n            "cs": {\n                "text": {\n                    "analyzer": "czech",\n                },\n                "sort": {\n                    "type": "icu_collation_keyword"\n                },\n                "keyword": {\n                    "test": "test"\n                }\n            },\n            "en": {\n                "text": {\n                    "analyzer": "en"\n                },\n                "sort": {\n                    "type": "icu_collation_keyword"\n                }\n            }\n        }}\n    }\n')),(0,l.kt)("h5",{id:"generated-schema-1"},"Generated Schema"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'"mappings": {\n        "properties": {\n            "a": {\n                "type": "object",\n                "properties": {\n                    "lang": {\n                        "type": "keyword"\n                    },\n                    "value": {\n                        "type": "text"\n                    }\n                }\n            },\n            "a_cs": {\n                "type": "text",\n                "analyzer": "czech",\n                "sort": {\n                    "type": "icu_collation_keyword",\n                    "index": false,\n                    "language": "cs"\n                },\n                "fields": {\n                    "keyword": {\n                        "test": "test",\n                        "type": "keyword"\n                    }\n                }\n            },\n            "a_en": {\n                "type": "text",\n                "analyzer": "en",\n                "sort": {\n                    "type": "icu_collation_keyword",\n                    "index": false,\n                    "language": "en"\n                },\n                "fields": {\n                    "keyword": {\n                        "type": "keyword"\n                    }\n                }\n            }\n}\n')),(0,l.kt)("h3",{id:"the-change-of-the-name-of-a-language-or-value-field"},"The change of the name of a language or value field"),(0,l.kt)("p",null,"The name of the field for the language value and the name of the field for the value of the item itself can be changed\nusing the ",(0,l.kt)("inlineCode",{parentName:"p"},"multilingual")," field and the ",(0,l.kt)("inlineCode",{parentName:"p"},"value-field")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"lang-field")," fields. It is not required to rename both fields."),(0,l.kt)("h4",{id:"example-4"},"Example:"),(0,l.kt)("h5",{id:"model-3"},"Model"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'"b":{\n  "type": "i18nStr", \n  "multilingual": {\n      "lang-field": "language", "value-field": "val"\n  }\n}\n')),(0,l.kt)("h5",{id:"generated-schema-2"},"Generated Schema"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'class BSchema(ma.Schema, ):\n    """BSchema schema."""\n    \n    language = ma_fields.String()\n    \n    val = ma_fields.String()\n    \nclass TestSchema(ma.Schema, ):\n    """TestSchema schema."""\n    \n    b = ma_fields.Nested(lambda: BSchema())\n\n')),(0,l.kt)("h3",{id:"indexing-another-data-type-using-supported-languages"},"Indexing another data type using supported languages"),(0,l.kt)("p",null,"If supported languages are defined, indexing for these languages can be added to data types other than multilingual and\ni18nStr. For this purpose you need to add to the field: ",(0,l.kt)("inlineCode",{parentName:"p"},"'multilingual': {'i18n': True}")),(0,l.kt)("h4",{id:"example-5"},"Example:"),(0,l.kt)("h5",{id:"model-4"},"Model:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'"model": {\n    "properties": {\n        "a": {\n            "type": "fulltext", \n            "multilingual": {\n                "i18n": true\n              }\n            }\n        }\n    "settings": {\n        "supported-langs": \n            {"cs": {}, "en": {}}\n    }\n}\n')),(0,l.kt)("h5",{id:"schema"},"Schema:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'"mappings": {\n    "properties":{\n        "a":{"type":"text"},\n        "a_cs":{\n            "type":"text",\n            "fields": {\n                "keyword":{"type":"keyword","ignore_above":50}\n            }\n        },\n        "a_en": {\n            "type":"text",\n            "fields": {\n            "keyword":{"type":"keyword","ignore_above":50}}\n        }\n    }\n}\n')))}u.isMDXComponent=!0}}]);